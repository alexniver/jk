name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Install dependencies
      run: |
        if [ ${{ matrix.platform }} == 'windows-latest' ]; then
          rustup target add x86_64-pc-windows-gnu
        fi

    - name: Build
      run: |
        if [ ${{ matrix.platform }} == 'ubuntu-latest' ]; then
          cargo build --release
        elif [ ${{ matrix.platform }} == 'windows-latest' ]; then
          cargo build --release --target x86_64-pc-windows-gnu
        fi

    - name: Archive
      if: matrix.platform == 'ubuntu-latest'
      run: |
        tar -czvf kk-linux.tar.gz -C target/release kk
      shell: bash

    - name: Archive
      if: matrix.platform == 'windows-latest'
      run: |
        7z a kk-windows.zip target\x86_64-pc-windows-gnu\release\kk.exe
      shell: cmd

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: |
          ${{ github.workspace }}/kk-linux.tar.gz
          ${{ github.workspace }}/kk-windows.zip
        asset_name: |
          kk-linux.tar.gz
          kk-windows.zip
        asset_content_type: application/zip
